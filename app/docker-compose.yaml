# version: '3.7'

# services:
#   kafka:
#     image: wurstmeister/kafka:2.13-2.8.1
#     container_name: kafka
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
#       KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     ports:
#       - "9094:9094"
#     depends_on:
#       - zookeeper

#   zookeeper:
#     image: wurstmeister/zookeeper:3.4.6
#     container_name: zookeeper
#     ports:
#       - "2181:2181"

#   redis:
#     image: redis:latest
#     container_name: redis
#     ports:
#       - "6379:6379"

#   kafka-python:
#     build:
#       context: .
#     command: python redis_client.py
#     depends_on:
#       - kafka
#       - redis



version: '3.7'

services:
  redis:
    image: redis:latest
    container_name: redis
    expose:
      - "6379"
    ports:
      - "6379:6379"
    restart: always
    command: redis-server --loglevel warning
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"

  redis-client:
    build:
      context: .
    command: python redis_client.py
    environment:
      KAFKA_TOPIC: test
      REDIS_HOST: redis
    restart: always
    # depends_on:
    #   - redis
